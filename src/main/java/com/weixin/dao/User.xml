<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.weixin.dao.UserCrudDao">

    <!-- select语句 -->
    <select id="selectUserByID" parameterType="int" resultType="User">
        select * from `user` where user.id = #{id}
    </select>
    
    <!-- 定义的resultMap，可以解决类的属性名和数据库列名不一致的问题-->
    <resultMap type="User" id="userResultMap">
        <id property="id" column="id"  />
        <result property="userName" column="userName"  />
        <result property="userAge" column="userAge"  />
        <result property="userAddress" column="userAddress"  />
        <result property="userPwd" column="userPwd"  />
    </resultMap>
    
    <!-- 返回list的select语句，注意 resultMap的值是指向前面定义好的 -->
    <select id="selectUsersByName" parameterType="string" resultMap="userResultMap">
        select * from user where user.userName = #{userName}
    </select>
    
 	<!--查找所有的用户 -->
    <select id="getAllUser" resultMap="userResultMap">
        select * from user
    </select>
    
    <select id="getUserInfoByName" parameterType="string" resultType="User">
        select * from user where user.userName = #{uName}
    </select>
    
    <!--执行增加操作的SQL语句。id和parameterType分别与IUserOperation接口中的addUser方法的名字和参数类型一致。
    useGeneratedKeys设置为"true"表明要MyBatis获取由数据库自动生成的主键；keyProperty="id"指定把获取到的主键值注入到User的id属性--> 
    <insert id="addUser" parameterType="User" useGeneratedKeys="true" keyProperty="id"> 
        insert into user(userName,userPwd,userAge,userAddress)  
             values(#{userName},#{userPwd},#{userAge},#{userAddress})  
    </insert>
    
    <update id="updateUser" parameterType="User" >
        update user set userName=#{userName},userPwd=#{userPwd},userAge=#{userAge},userAddress=#{userAddress} where id=#{id}
    </update>
    
    <delete id="deleteUser" parameterType="int">
        delete from user where id=#{id}
    </delete>
    
</mapper>